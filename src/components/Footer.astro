---
import Bulb from "./icons/Bulb.astro";
import LightPull from "./icons/LightPull.astro";
---

<style>
  html[data-lights-on="true"] footer {
    color: initial;
  }

  footer {
    box-sizing: border-box;
    width: 100%;
    height: var(--footer-height);
    position: fixed;
    bottom: 0;
    padding: var(--size-3);
    padding-top: 0;
    z-index: 0;
    color: var(--gray-1);
  }

  footer p {
    text-align: center;
  }

  button {
    width: max-content;
  }

  .ceiling {
    padding: 0;
  }

  .socket {
    transform: rotateZ(180deg) translateY(15%);
  }

  .bulb.icon {
    --duration: 200ms;
    height: var(--size-10);
    transform: scale(1, 1);
    transform-origin: bottom;
    transition: transform var(--duration) var(--ease-elastic-4);
  }

  .bulb.charging.icon {
    transform: scale(0.95, 1.06);
  }

  .bulb :global(.rays) {
    opacity: 0;
  }

  .bulb.charged :global(.rays) {
    opacity: 1;
    animation: shiny var(--duration) var(--ease-elastic-4);
    transform-origin: center;
  }

  .pull {
    position: absolute;
    right: 0;
    top: 0;
  }

  .range {
    aspect-ratio: 1;
    transform: rotateZ(90deg);
    transform-origin: center;
    cursor: grab;
    margin: 0;
    opacity: 0;
    touch-action: none;
  }

  .range:active {
    cursor: grabbing;
  }

  .light-pull.icon {
    position: absolute;
    top: -35%;
    left: 50%;
    height: var(--size-12);
    transform: translate(-50%, calc(var(--p, 0%) / 2.8));
    pointer-events: none;
  }

  .light-pull.icon.bounce-back {
    transform: translate(-50%, 0%);
    transition: transform 300ms var(--ease-elastic-5);
  }

  @keyframes shiny {
    from {
      opacity: 0;
      transform: scale(0.7);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
</style>

<footer class="no-print">
  <script>
    const root = document.querySelector("html");
    const footer = document.querySelector("footer");
    const bulb = document.querySelector(".bulb");
    const range = document.querySelector(".range");
    const lightPull = document.querySelector(".light-pull");
    let toggled = false;
    range.addEventListener("input", (event) => {
      lightPull.style.setProperty("--p", `${event.target.value}%`);
      if (event.target.value > 75) {
        bulb.classList.add("charging");
        if (!toggled) {
          hapticFeedback();
        }
        toggled = true;
      } else {
        bulb.classList.remove("charging");
        if (toggled) {
          bulb.classList.toggle("charged");
          root.dataset.lightsOn = !(root.dataset.lightsOn === "true");
          toggled = false;
          hapticFeedback();
        }
      }
    });
    range.addEventListener("change", (event) => {
      lightPull.classList.add("bounce-back");
      bulb.classList.remove("charging");
      lightPull.addEventListener("transitionend", () => {
        lightPull.classList.remove("bounce-back");
        bounceBack();
      });
      if (toggled) {
        bulb.classList.toggle("charged");
        root.dataset.lightsOn = !(root.dataset.lightsOn === "true");
        hapticFeedback();
      }
      toggled = false;
    });

    function bounceBack() {
      range.value = 0;
      range.dispatchEvent(
        new Event("input", { bubbles: true, cancelable: true })
      );
    }

    function hapticFeedback() {
      if (window.navigator.vibrate) {
        window.navigator.vibrate(30);
      }
    }
  </script>
  <section class="ceiling relative">
    <div class="socket d-flex col align-center">
      <Bulb id="bulb" class="bulb" />
    </div>
    <div class="pull">
      <label for="ligth-switch" style="display: none;"> Light switch</label>
      <input
        type="range"
        class="range"
        id="light-switch"
        min="0"
        max="100"
        step="any"
        value="0"
      />
      <LightPull class="light-pull" />
    </div>
  </section>
</footer>
