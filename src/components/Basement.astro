---
import ArrowDown from "./icons/ArrowDown.astro";
import Bulb from "./icons/Bulb.astro";
import Cord from "./icons/Cord.astro";
import PullCord from "./icons/PullCord.astro";
---

<style>
  @keyframes shiny {
    from {
      opacity: 0;
      transform: scale(0.7);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes point-down {
    from {
      transform: translate(-50%, 0);
    }
    50% {
      transform: translate(-50%, -5px);
    }
    to {
      transform: translate(-50%, 0);
    }
  }

  .socket {
    transform: rotateZ(180deg);
  }

  .cord.icon {
    height: var(--size-7);
    margin: -13px 0 0;
    transform-origin: top;
    transform: scaleY(400%);
  }

  .bulb.icon {
    --duration: 200ms;
    height: var(--size-9);
    transform: scale(1, 1);
    transform-origin: bottom;
    transition: transform var(--duration) var(--ease-elastic-4);
  }

  .bulb.charging.icon {
    transform: scale(0.95, 1.06);
  }

  .bulb :global(.rays) {
    opacity: 0;
  }

  .bulb.on :global(.rays) {
    opacity: 1;
    animation: shiny var(--duration) var(--ease-elastic-4);
    transform-origin: center;
  }

  .switch {
    position: absolute;
    right: 0;
    top: 0;
  }

  .range {
    aspect-ratio: 1;
    transform: rotateZ(90deg) translateX(50%);
    transform-origin: center;
    cursor: grab;
    margin: 0;
    opacity: 0;
    touch-action: none;
    pointer-events: none;
  }

  .range::-webkit-slider-thumb {
    pointer-events: auto;
    transform: scale(4);
  }

  .range:active {
    cursor: grabbing;
  }

  .pull-cord .icon {
    position: absolute;
    top: -35%;
    left: 50%;
    height: var(--size-12);
    transform: translate(-50%, calc(var(--p, 0%) / 3.5));
    pointer-events: none;
  }

  .pull-cord .icon.bounce-back {
    transform: translate(-50%, 0%);
    transition: transform 300ms var(--ease-elastic-5);
  }

  .pull-cord .arrow.icon {
    aspect-ratio: 1;
    height: var(--size-10);
    bottom: -5px;
    top: unset;
    opacity: 0;
    transition: opacity 300ms var(--ease-out-1);
    animation: point-down 2500ms var(--ease-elastic-4) infinite;
  }

  .pull-cord
    .icon:is([style="--p:0%;"], [style="--p: 0%;"], :not([style]))
    ~ .arrow {
    opacity: 1;
  }

  .hidden {
    width: 0;
    height: 0;
    display: block;
    overflow: hidden;
  }
</style>

<script>
  const root = document.querySelector("html") as HTMLElement;
  const bulb = document.querySelector(".bulb") as HTMLElement;
  const range = document.querySelector(".range") as HTMLInputElement;
  const pullCord = document.querySelector(".pull-cord .icon") as HTMLElement;

  let toggled = false;

  range.addEventListener("input", (event: InputEvent) =>
    pull((event.target as HTMLInputElement).valueAsNumber)
  );
  range.addEventListener("change", release);

  function pull(value: number) {
    pullCord.style.setProperty("--p", `${value}%`);
    if (value > 65) {
      bulb.classList.add("charging");
      if (!toggled) {
        hapticFeedback();
      }
      toggled = true;
    } else {
      bulb.classList.remove("charging");
      toggleLight();
    }
  }

  function release() {
    pullCord.classList.add("bounce-back");
    bulb.classList.remove("charging");
    pullCord.addEventListener(
      "transitionend",
      () => {
        pullCord.classList.remove("bounce-back");
        bounceBack();
      },
      { once: true }
    );
    toggleLight();
  }

  function toggleLight() {
    if (toggled) {
      bulb.classList.toggle("on");
      root.dataset.lights = root.dataset.lights === "on" ? "off" : "on";
      hapticFeedback();
      toggled = false;
    }
  }

  function bounceBack() {
    range.valueAsNumber = 0;
    range.dispatchEvent(
      new Event("input", { bubbles: true, cancelable: true })
    );
  }

  function hapticFeedback() {
    if (window.navigator.vibrate) {
      window.navigator.vibrate(30);
    }
  }
</script>
<div class="socket d-flex col align-center">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="bulb icon icon-tabler icon-tabler-bulb"
    viewBox="0 0 24 24"
    stroke-width="1"
    stroke="currentColor"
    fill="none"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path class="rays" d="M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7"
    ></path>
    <path
      d="M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3"
    ></path>
    <line x1="9.7" y1="17" x2="14.3" y2="17"></line>
    <line x1="12" y1="17" x2="12" y2="14.5"></line>
    <line x1="12" y1="14.5" x2="11" y2="13"></line>
    <line x1="12" y1="14.5" x2="13" y2="13"></line>
  </svg>

  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="cord icon icon-tabler icon-tabler-cord"
    viewBox="0 0 24 24"
    stroke-width="2"
    stroke="currentColor"
    fill="none"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path d="M12 1v24"></path>
  </svg>
</div>
<div class="switch">
  <label for="light-switch" class="hidden">Light switch</label>
  <input
    type="range"
    class="range"
    id="light-switch"
    min="0"
    max="100"
    step="any"
    value="0"
  />
  <div class="pull-cord">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="light-pull icon icon-tabler icon-tabler-light-pull"
      viewBox="0 0 24 60"
      stroke-width="1.3"
      stroke="currentColor"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path stroke="none" d="M0 0h24v60H0z" fill="none"></path>
      <g class="string">
        <path d="M12 1v3"></path>
        <path d="M12 8v3"></path>
        <path d="M12 15v3"></path>
        <path d="M12 21v3"></path>
        <path d="M12 28v3"></path>
        <path d="M12 35v3"></path>
        <circle class="ring" cx="12" cy="43" r="2"></circle>
      </g>
    </svg>

    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="arrow icon icon-tabler icon-tabler-arrow-down"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="currentColor"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 5l0 14m6 -6l-6 6m-6 -6l6 6"></path>
    </svg>
  </div>
</div>
